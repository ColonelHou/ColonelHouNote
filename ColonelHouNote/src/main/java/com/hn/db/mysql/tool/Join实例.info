创建这两个表SQL语句如下：
CREATE TABLE  a(aID int( 1 ) AUTO_INCREMENT PRIMARY KEY , aNum char( 20 ));
CREATE TABLE b(bID int( 1 ) NOT NULL AUTO_INCREMENT PRIMARY KEY , bName char( 20 ));
INSERT INTO a VALUES ( 1, 'a20050111' ) , ( 2, 'a20050112' ) , ( 3, 'a20050113' ) , ( 4, 'a20050114' ) , ( 5, 'a20050115' ) ;
INSERT INTO b VALUES ( 1, '2006032401' ) , ( 2, '2006032402' ) , ( 3, '2006032403' ) , ( 4, '2006032404' ) , ( 8, '2006032408' ) ;
left join(左联接) :左表(A)的记录将会全部表示出来,而右表(B)只会显示符合搜索条件的记录(例子中为: A.aID = B.bID).B表记录不足的地方均为NULL. 
SELECT * FROM a LEFT JOIN  b ON a.aID =b.bID;
right join(右联接):和left join的结果刚好相反,这次是以右表(B)为基础的,A表不足的地方用NULL填充. 
sql语句如下: 
SELECT  * FROM a RIGHT JOING b ON a.aID = b.bID;
inner join(相等联接或内联接) :inner join并不以谁为基础,它只显示符合条件的记录
SELECT * FROM  a INNER JOIN  b ON a.aID =b.bID ;
